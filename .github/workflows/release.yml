on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'asciiTeX-*'  # Push events to matching v*, i.e. asciiTeX-1.0

name: Upload Release Asset

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: |
          cmake -E make_directory ${{runner.workspace}}/build
          cd ${{runner.workspace}}/build
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
          cmake --build . --config $BUILD_TYPE
          ls -la ..
          ls -la .
          zip --junk-paths $GITHUB_WORKSPACE/asciiTeX.zip $GITHUB_WORKSPACE/README.md $GITHUB_WORKSPACE/EXAMPLES ${{runner.workspace}}/build/asciitex
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./asciiTeX.zip
          asset_name: asciiTeX.zip
          asset_content_type: application/zip
